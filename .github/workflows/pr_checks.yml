name: PR Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=10m
      - uses: pre-commit/action@v3.0.1

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      - name: Run tests
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      - name: Verify dependencies
        run: go mod verify
      - name: Build
        run: go build -v ./...
      - name: Check formatting
        run: |
          gofmt_output=$(gofmt -l -d .)
          if [ -n "$gofmt_output" ]; then
            echo "Code is not properly formatted:"
            echo "$gofmt_output"
            exit 1
          fi

  security:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run govulncheck
        run: govulncheck ./...
        continue-on-error: true  # Make this check informational rather than blocking
      - name: Report vulnerabilities
        run: |
          echo "::warning ::Security vulnerabilities were found. Please review the govulncheck output above."
        if: ${{ failure() }}
